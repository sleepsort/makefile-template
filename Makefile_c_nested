# Makefile for small c/c++ project
#
# implicit rules are expanded here, so that compilation 
# rules can be customized and sometimes faster.
#
# Hierarchy:
# .
# |-- Makefile
# |-- lib
# |   `-- abc.a
# |-- obj
# |   |-- intermediate.o
# |   `-- target
# `-- othr
# |   `-- intermediate.cpp
# `-- main 
#     `-- target.cpp
#
# To build targets, simply run:
# $ make
# or
# $ make all
#


CC	:= g++
V	:= @
RM	+= -r
LIB += ./lib/libTCWordSeg.a -lpthread
USER_FLAGS+= -Wall -O2 -I .
OBJ := ./obj/

define make-intermediate 
	@echo + cc $<
	$(V)$(CC) -c $(USER_FLAGS) -o $@ $^
endef
define make-target
	@echo + cc $<
	$(V)$(CC) $(USER_FLAGS) -o $@ $^ $(LIB)
	$(V)mv $@ $(OBJ)
endef

targets := $(wildcard main/*.cpp) $(wildcard main/*.c)
objects := $(wildcard */*.cpp) $(wildcard */*.c)
objects := $(filter-out $(targets), $(objects))
objects := $(patsubst %.cpp,%.o,$(objects))
objects := $(notdir $(objects))
objects := $(addprefix $(OBJ),$(objects))
targets := $(basename $(notdir $(targets)))

all:always $(targets)
builder: main/builder.cpp $(objects)
	$(make-target)
listener: main/listener.cpp $(objects)
	$(make-target)
fake_client: main/fake_client.c
	$(make-target)
$(OBJ)WrapperSockTcp.o: socket/WrapperSockTcp.cpp
	$(make-intermediate)
$(OBJ)InvertedList.o: entity/InvertedList.cpp
	$(make-intermediate)
$(OBJ)WordSeg.o : lib/WordSeg.cpp
	$(make-intermediate)
$(OBJ)util.o: ./util/util.cpp
	$(make-intermediate)
$(OBJ)Rank.o : ./method/Rank.cpp
	$(make-intermediate)

listen:
	$(V)$(OBJ)listener 11111 100

build:
	@$(OBJ)builder -seg ../dict ../ori/segmentable_addr ../data/segmentable_addr
	@$(OBJ)./builder -seg ../dict ../ori/segmentable_title ../data/segmentable_title
	@$(OBJ)./builder -index

.PHONY:clean always test
always:
	$(V)mkdir -p $(OBJ)
clean:
	$(V)$(RM) obj 2>/dev/null
